#! /usr/bin/perl -w

# nagios: -epn
use strict;
use warnings;

# sudoers:
# nagios ALL=NOPASSWD: /sbin/zpool list -H -o name
# nagios ALL=NOPASSWD: /sbin/zpool status *
# nagios ALL=NOPASSWD: /sbin/zfs list -H -o avail,used *

use Nagios::Plugin;
use Nagios::Plugin::Getopt;

my @si=qw(k M G T E Y Z);
my %si=map {$si[$_] => 1024**$_} (0..$#si);

my $np=Nagios::Plugin->new(shortname => 'zfs',
                           usage => "Usage: %s -u <uri>\n[-w <warning>] [-c <critical>]",
                           version => 0.1,
                           blurb => 'Tests ZFS pool capacity',
                           url => 'http://firedrake.org/cgi-bin/gitweb.cgi?p=nagios-plugins.git',
);

$np->add_arg(
  spec => 'warning|w=i',
  help => 'WARNING if more than INTEGER % full',
  default => 80,
);
$np->add_arg(
  spec => 'critical|c=i',
  help => 'CRITICAL if more than INTEGER % full',
  default => 90,
);

$np->getopts;
my $ng=$np->opts;

my @critfail;
my @warnfail;
my @ok;

open POOLS,'-|',qw(sudo /sbin/zpool list -H -o name);
while (my $pool=<POOLS>) {
  chomp $pool;
  open SYS,'-|',qw(sudo /sbin/zpool status),$pool;
  while (<SYS>) {
    chomp;
    if (/state: (.*)/ && $1 ne 'ONLINE') {
      push @critfail, "$pool is $1";
    }
  }
  close SYS;
  open SYS,'-|',qw(sudo /sbin/zfs list -H -o),'avail,used',$pool;
  while (my $u=<SYS>) {
    chomp $u;
    my ($avail,$used)=map {parsesi($_)} split ' ',$u;
    my $pc=100*$used/($used+$avail);
    my $status="$pool: ".int($pc+.5).'% full';
    if ($pc>=$ng->get('critical')) {
      push @critfail,$status;
    } elsif ($pc>=$ng->get('warning')) {
      push @warnfail,$status;
    } else {
      push @ok,$status;
    }
  }
  close SYS;
}
close POOLS;

my $message=join('; ',@critfail,@warnfail);

if (@critfail) {
  $np->nagios_exit(CRITICAL,$message);
} elsif (@warnfail) {
  $np->nagios_exit(WARNING,$message);
} else {
  $np->nagios_exit(OK,join('; ',@ok));
  exit 0;
}

sub parsesi {
  my $s=shift;
  if ($s =~ /([.\d]+)([A-Za-z])/) {
    return $1*$si{$2};
  } else {
    return $s;
  }
}
