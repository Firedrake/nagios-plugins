#! /usr/bin/perl -w

# nagios: -epn
use strict;
use Nagios::Plugin;
use Nagios::Plugin::Getopt;
use POSIX qw(strftime);

my $np=Nagios::Plugin->new(shortname => 'fileage',
                           usage => 'Usage: %s -f <filename> -w <warningsec> -c <criticalsec> (-m) (-n)',
                           version => 0.1,
                           blurb => 'Tests file age',
                           url => 'http://firedrake.org/cgi-bin/gitweb.cgi?p=nagios-plugins.git',
);

$np->add_arg(
  spec => 'warning|w=i',
  help => 'WARNING if older/newer than INTEGER seconds',
  default => 300,
);
$np->add_arg(
  spec => 'critical|c=i',
  help => 'CRITICAL if older/newer than INTEGER seconds',
  default => 600,
);
$np->add_arg(
  spec => 'file|f=s',
  help => 'File/directory name to test',
  required => 1,
);
$np->add_arg(
  spec => 'newer|n',
  help => 'Alert if newer than threshold',
  default => '',
);
$np->add_arg(
  spec => 'missing|m',
  help => 'Alert if file does NOT exist',
  default => '',
);
$np->add_arg(
  spec => 'inode|i',
  help => 'Use inode change time, not mtime',
  default => '',
);

$np->getopts;
my $ng=$np->opts;
my %opt=map {$_->[0] => $ng->get($_->[1])} ([w => 'warning'],[c => 'critical']);
map {$opt{$_->[0]}=$ng->get($_->[1])} ([f => 'file'],
                                       [m => 'missing'],
                                       [n => 'newer'],
				       [i => 'inode']);

my @critfail;
my @warnfail;
my @ok;

if (-e $opt{f}) {
  my $age=time-(stat($opt{f}))[$opt{i}?10:9];
  my $printage=strftime("%H:%M:%S",gmtime($age));
  $printage =~ s/^00://;
  if ($opt{n}) {
    if ($age < $opt{c}) {
      push @critfail,"$opt{f} is $printage old";
    } elsif ($age < $opt{w}) {
      push @warnfail,"$opt{f} is $printage old";
    }
  } else {
    if ($age > $opt{c}) {
      push @critfail,"$opt{f} is $printage old";
    } elsif ($age > $opt{w}) {
      push @warnfail,"$opt{f} is $printage old";
    }
  }
} else {
  if ($opt{m}) {
    push @critfail,"$opt{f} is missing";
  } else {
    push @ok,"$opt{f} not found";
  }
}

my $message=join('; ',@critfail,@warnfail);

if (@critfail) {
  $np->nagios_exit(CRITICAL,$message);
} elsif (@warnfail) {
  $np->nagios_exit(WARNING,$message);
} else {
  $np->nagios_exit(OK,join('; ',@ok) || "$opt{f} OK");
  exit 0;
}
